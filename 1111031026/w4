#include <stdio.h>          
struct student {                              
  		unsigned int stuNum;
        char name[20];
        int math, computer;
        double average;
};        
typedef struct student stuData;
void sort(stuData stuArr[],int num); 
int main(void) { 
   FILE *cfPtr; 
   unsigned int i;
   stuData stuArr[100];
    int j;
     int ie; 
   if ((cfPtr = fopen("students.dat", "wb")) == NULL) {  
      puts("File could not be opened.");				
   } 
   else { 
        
      stuData student = {0, "", 0, 0,0.0} , blankClient = {0, "", 0, 0,0.0};                       
      for (i = 1; i <= 100; ++i) {                                   
         fwrite(&blankClient, sizeof(stuData), 1, cfPtr);  
      }                                     
      fclose (cfPtr);
   if ((cfPtr = fopen("students.dat", "rb+")) == NULL) {   
      puts("File could not be opened.");				
   } 
   else { 
      stuData blankClient={0, "", 0, 0,0.0};
	  for (i = 1; i <= 100; ++i) {                                   
         fwrite(&blankClient, sizeof(stuData), 1, cfPtr);  
      }             
      printf("%s", "Enter student number"
         " (1 to 100, 0 to end input): ");
      scanf("%d", &student.stuNum);
      while (student.stuNum != 0) { 
         printf("%s", "Enter name , math, computer: ");
         fscanf(stdin, "%14s%14d%9d", student.name, &student.math, 
            &student.computer);
		student.average = (student.math + student.computer)/2;
         fseek(cfPtr, (student.stuNum - 1) *               
            sizeof(stuData), SEEK_SET);                   
         fwrite(&student, sizeof(stuData), 1, cfPtr);
        
         printf("%s", "Enter student number: ");
         scanf("%d", &student.stuNum);
      } 
      fclose(cfPtr);  
   } 
   if ((cfPtr = fopen("students.dat", "rb")) == NULL) {
      puts("File could not be opened.");
   } 
   else {  
      printf("%-6s%-10s%-10s%-10s%10s\n", "stuNum","name", "math",
         "computer", "average");
      while (!feof(cfPtr)) { 
         stuData student = {0, "", 0, 0,0.0};
         int result = fread(&student, sizeof(stuData), 1, cfPtr);
         if (result != 0 && student.stuNum != 0) {  
            //printf("%-6d%-10s%-16d%-11d%10.2f\n", student.stuNum, student.name ,student.math, student.computer, student.average);
                stuArr[ie].stuNum=student.stuNum;
            	strcpy(stuArr[ie].name,student.name);
                stuArr[ie].math=student.math;
                stuArr[ie].computer=student.computer;
                stuArr[ie].average=student.average;
                ie++;	
         } 
      } 

      fclose(cfPtr); 
   } 
    printf("before swap\n");
    for(j=0;j<ie;j++){ 
    printf("%-6d%-10s%-5d%10d%14.2f\n",stuArr[j].stuNum, stuArr[j].name,stuArr[j].math,stuArr[j].computer, stuArr[j].average);
    } 
   sort(stuArr,ie);
    printf("after swap\n");
    for(j=0;j<ie;++j)
    printf("%-6d%-10s%-5d%10d%14.2f\n", stuArr[j].stuNum, stuArr[j].name,stuArr[j].math,stuArr[j].computer, stuArr[j].average);
  }  
} 
void sort(stuData stuArr[],int num)
{
	int pass;
	int i=0;
	int j=0;
	for(pass=1;pass<num;++pass)
	{
		for(i = 0;i<num - 1;i++){
			if(stuArr[i].average < stuArr[i+1].average){
				stuData temp;
				temp = stuArr[i];
				stuArr[i]=stuArr[i+1];
				stuArr[i+1]=temp;
			}
		}
	}
}
